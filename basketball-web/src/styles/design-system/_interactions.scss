// ============================================
// 微交互样式 - Apple风格
// ============================================

// ============================================
// 1. 按钮点击反馈动画
// ============================================

@mixin button-press {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);

  &:active {
    transform: scale(0.96);
  }
}

@mixin button-press-subtle {
  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);

  &:active {
    transform: scale(0.98);
  }
}

// ============================================
// 2. 卡片悬停效果
// ============================================

@mixin card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
  }
}

@mixin card-hover-subtle {
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
  }
}

// ============================================
// 3. 加载动画
// ============================================

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

.loading-spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid rgba(0, 122, 255, 0.2);
  border-top-color: #007AFF;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.loading-pulse {
  animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

// ============================================
// 4. 骨架屏
// ============================================

.skeleton {
  background: linear-gradient(
    90deg,
    #f0f0f0 0%,
    #f8f8f8 50%,
    #f0f0f0 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s ease-in-out infinite;
  border-radius: 8px;
}

.skeleton-text {
  height: 16px;
  margin-bottom: 8px;

  &:last-child {
    margin-bottom: 0;
    width: 60%;
  }
}

.skeleton-avatar {
  width: 48px;
  height: 48px;
  border-radius: 50%;
}

.skeleton-card {
  height: 200px;
  border-radius: 12px;
}

// ============================================
// 5. 页面过渡动画
// ============================================

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// 过渡动画类
.fade-in {
  animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-up {
  animation: fadeInUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-down {
  animation: fadeInDown 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-right {
  animation: slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-left {
  animation: slideInLeft 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.scale-in {
  animation: scaleIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

// ============================================
// 6. 悬停提示效果
// ============================================

@mixin tooltip {
  position: relative;

  &::after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-8px);
    padding: 6px 12px;
    background-color: rgba(0, 0, 0, 0.85);
    color: white;
    font-size: 12px;
    border-radius: 6px;
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &:hover::after {
    opacity: 1;
  }
}

// ============================================
// 7. 涟漪效果
// ============================================

@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

.ripple-effect {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    pointer-events: none;
  }

  &:active::after {
    animation: ripple 0.6s ease-out;
  }
}

// ============================================
// 8. 焦点样式增强
// ============================================

@mixin focus-ring {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0, 122, 255, 0.2);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@mixin focus-ring-inset {
  outline: none;
  box-shadow: inset 0 0 0 2px rgba(0, 122, 255, 0.5);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

// ============================================
// 9. 滚动动画
// ============================================

@mixin scroll-fade-in {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1),
              transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);

  &.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
}

// ============================================
// 10. 触摸反馈（移动端）
// ============================================

@mixin touch-feedback {
  -webkit-tap-highlight-color: rgba(0, 122, 255, 0.1);
  touch-action: manipulation;
  user-select: none;

  &:active {
    background-color: rgba(0, 122, 255, 0.05);
  }
}

// ============================================
// 11. 平滑滚动
// ============================================

.smooth-scroll {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

// ============================================
// 12. 禁用状态
// ============================================

@mixin disabled-state {
  opacity: 0.4;
  cursor: not-allowed;
  pointer-events: none;
}

.disabled {
  @include disabled-state;
}

// ============================================
// 13. 加载状态覆盖层
// ============================================

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

// ============================================
// 14. 成功/错误动画
// ============================================

@keyframes successPulse {
  0% {
    box-shadow: 0 0 0 0 rgba(52, 199, 89, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(52, 199, 89, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(52, 199, 89, 0);
  }
}

@keyframes errorShake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-4px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(4px);
  }
}

.success-pulse {
  animation: successPulse 0.6s ease-out;
}

.error-shake {
  animation: errorShake 0.5s ease-in-out;
}

// ============================================
// 15. 渐进式图片加载
// ============================================

.progressive-image {
  position: relative;
  overflow: hidden;
  background-color: #f0f0f0;

  img {
    opacity: 0;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);

    &.loaded {
      opacity: 1;
    }
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      #f0f0f0 0%,
      #f8f8f8 50%,
      #f0f0f0 100%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s ease-in-out infinite;
  }

  img.loaded ~ &::before {
    display: none;
  }
}
